* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root{
    --index: calc(1vw + 1vh);
    --transition: cubic-bezier(.1, .7, 0, 1);
}

body{
    background-color: #141414;
}

.wrapper{
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
}

.items{
    display: flex;
    gap: 0.4rem;
    perspective: calc(var(--index) * 35);
}

.item{
    width: calc(var(--index) * 3);
    height: calc(var(--index) * 12);
    background-color: #222;
    background-size: cover;
    background-position: center;
    cursor: pointer;
    filter: grayscale(1) brightness(.5);
    transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
    will-change: transform, filter, rotateY, width;
}

.item::before, .item::after{
    content: '';
    position: absolute;
    height: 100%;
    width: 20px;
    right: calc(var(--index) * -1);
}

.item::after{
    left: calc(var(--index) * -1);
}

.items .item:hover{
    filter: inherit;
    transform: translateZ(calc(var(--index) * 10));
}

/*Right*/

.items .item:hover + *{
    filter: inherit;
    transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
    z-index: -1;
}

.items .item:hover + * + *{
    filter: inherit;
    transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
    z-index: -2;
}

.items .item:hover + * + * + *{
    filter: inherit;
    transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
    z-index: -3;
}

.items .item:hover + * + * + * + *{
    filter: inherit;
    transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
    z-index: -4;
}


/*Left*/

.items .item:has( + :hover){
    filter: inherit;
    transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
}

.items .item:has( + * + :hover){
    filter: inherit;
    transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
}

.items .item:has( + * + * + :hover){
    filter: inherit;
    transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
}

.items .item:has( + * + * + * + :hover){
    filter: inherit;
    transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
}

.items .item:active, .items .item:focus {
	width: 28vw;
	filter: inherit;
	z-index: 100;
	transform: translateZ(calc(var(--index) * 10));
    margin: 0 .45vw;
}



* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

#logo {
    position: absolute;
    left: 50px;
    top: 50px;
    z-index: 1000;
}
#logo > a {
    font-size: 100px;
    font-weight: 700;
    color: #fff;
    text-decoration: none;
}
#logo > a:hover {
    color: #f00;
}

#navmenu {
    position: absolute;
    right: 50px;
    top: 50px;
    width: 200px;
    display: flex;
    flex-direction: row;
    justify-content: flex-end; /* 주 축(main axis)의 정렬 방식, flex-direction이 row(가로)인 경우 가로 방향 정렬 */
    align-items: center; /* 교차 축(cross axis)의 정렬 방식 */
    /*background-color: aqua;*/
    z-index: 1000;
}
#navmenu > a {
    margin-left: 30px;
    color: #fff;
    /*background-color: beige;*/
    text-decoration: none;
}
#navmenu > a:hover {
    color: rgb(255, 0, 0);
}
.navicon {
    font-size: 40px;
    /*background-color: aquamarine;*/
}

#vid {
    width: 100%;
    position: relative;
    margin: 0 auto; /* position이 relative일 때 가로 정렬 방법, 좌우 여백을 자동으로 동일하게 적용 */
}
#vid > video {
    width: 100%;
}